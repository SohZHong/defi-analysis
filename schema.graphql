type User @entity {
  id: Bytes!
  totalSupplied: BigInt! # uint256
  totalBorrowed: BigInt! # uint256
  totalRepaid: BigInt! # uint256
  totalWithdrawn: BigInt! # uint256
  totalLiquidated: BigInt! # uint256
  flashLoanCount: Int! # uint8
  transactions: [Transaction!]! @derivedFrom(field: "user")
  useReserveAsCollateral: Boolean!
}

type Transaction @entity(immutable: true, timeseries: true) {
  id: Int8!
  user: User! # relationship with the 'User' entity
  eventType: String!  # "Supply", "Borrow", "Withdraw"
  amount: BigInt!
  reserve: Bytes!
  timestamp: Timestamp!
  transactionHash: Bytes!
}

type DailyStats @aggregation(intervals: ["day"], source: "Transaction") {
  id: Int8!
  user: User!
  timestamp: Timestamp!
  totalSupplied: BigInt! @aggregate(fn: "sum", arg: "amount", filters: [{ field: "eventType", value: "Supply" }])
  totalBorrowed: BigInt! @aggregate(fn: "sum", arg: "amount", filters: [{ field: "eventType", value: "Borrow" }])
  totalWithdrawn: BigInt! @aggregate(fn: "sum", arg: "amount", filters: [{ field: "eventType", value: "Withdraw" }])
}

# type Borrow @entity(immutable: true) {
#   id: Bytes!
#   reserve: Bytes! # address
#   user: User! # address
#   onBehalfOf: Bytes! # address
#   amount: BigInt! # uint256
#   interestRateMode: Int! # uint8
#   borrowRate: BigInt! # uint256
#   referralCode: Int! # uint16
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type FlashLoan @entity(immutable: true) {
#   id: Bytes!
#   target: Bytes! # address
#   initiator: Bytes! # address
#   asset: Bytes! # address
#   amount: BigInt! # uint256
#   interestRateMode: Int! # uint8
#   premium: BigInt! # uint256
#   referralCode: Int! # uint16
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type LiquidationCall @entity(immutable: true) {
#   id: Bytes!
#   collateralAsset: Bytes! # address
#   debtAsset: Bytes! # address
#   user: Bytes! # address
#   debtToCover: BigInt! # uint256
#   liquidatedCollateralAmount: BigInt! # uint256
#   liquidator: Bytes! # address
#   receiveAToken: Boolean! # bool
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type Repay @entity(immutable: true) {
#   id: Bytes!
#   reserve: Bytes! # address
#   user: Bytes! # address
#   repayer: Bytes! # address
#   amount: BigInt! # uint256
#   useATokens: Boolean! # bool
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type ReserveDataUpdated @entity(immutable: true) {
#   id: Bytes!
#   reserve: Bytes! # address
#   liquidityRate: BigInt! # uint256
#   stableBorrowRate: BigInt! # uint256
#   variableBorrowRate: BigInt! # uint256
#   liquidityIndex: BigInt! # uint256
#   variableBorrowIndex: BigInt! # uint256
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type ReserveUsedAsCollateralDisabled @entity(immutable: true) {
#   id: Bytes!
#   reserve: Bytes! # address
#   user: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type ReserveUsedAsCollateralEnabled @entity(immutable: true) {
#   id: Bytes!
#   reserve: Bytes! # address
#   user: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type Supply @entity(immutable: true) {
#   id: Bytes!
#   reserve: Bytes! # address
#   user: Bytes! # address
#   onBehalfOf: Bytes! # address
#   amount: BigInt! # uint256
#   referralCode: Int! # uint16
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type Withdraw @entity(immutable: true) {
#   id: Bytes!
#   reserve: Bytes! # address
#   user: Bytes! # address
#   to: Bytes! # address
#   amount: BigInt! # uint256
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }
